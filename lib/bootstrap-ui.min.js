/*!
 * Mask Bootstrap UI v0.0.1
 * Part of the Atma.js Project
 * http://atmajs.com/
 *
 * MIT license
 * (c) 2015, 2015 Atma.js and other contributors
 */
"use strict";!function(n,e){var t="undefined"!=typeof global?global:window,a=t.mask||t.atma&&t.atma.mask;if(null==a)throw Error("MaskJS was not loaded");e(t,a)}(void 0,function(n,e,t,a,o){var l=e.Compo.config.getDOMLibrary();e.define("\n	// source Button.mask\n	define Button {\n		\n		button.btn.@[attr.class || 'btn-default'] style='@attr.style' {\n	        @if (attr.glyph) {\n				i.glyphicon.glyphicon-@[attr.glyph];\n			}\n	        @placeholder;\n	    }\n	}\n	// end:source Button.mask\n	// source Modal.mask\n	define Modal {\n		function show () {\n			this.$.modal('show');\n		}\n		function hide () {\n			this.$.modal('hide');\n		}\n		\n		slot modalHide () {\n			this.hide();\n		}\n		slot modalShow () {\n			this.show();\n		}\n		\n		.modal.fade\n			data-backdrop='@backdrop.attr.value'\n			data-keyboard='@keyboard.attr.value'		\n		> .modal-dialog > .modal-content {\n				.modal-header {\n					@header;\n					@else {\n						@if (backdrop.attr.value !== 'static') {\n							button.close data-dismiss= modal > span > 'x';\n						}\n						h4 .modal-title > @title;\n					}\n				}\n				@body required >\n					.modal-body style='position:relative; height:@attr.height' >\n						@placeholder;\n						\n				.modal-footer >\n					@footer;\n					@else {\n						Button\n							data-dismiss = modal\n							x-tap = 'modalHide' >\n								'@[ attr.lblCancel || \"Close\"]'\n						Button .btn-primary\n							x-tap = 'modalSubmit' >\n								'@[ attr.lblOk || \"OK\" ]'\n					}\n			}\n	}\n	// end:source Modal.mask\n	// source Dropdown.mask\n	define Dropdown as (.dropdown) {\n	    slot domInsert () {\n	        this.$.filter('a').dropdown();\n	    }\n	\n	    let Item {\n	        li class='@[disabled ? \"disabled\"]' role=presentation > \n	            a .menuitem href='@attr.href' > \n	                @placeholder;\n	    }\n	    \n		let Header {\n	        li .dropdown-header > @placeholder;\n	    }\n		\n		let Divider {\n			li .divider role=separator;\n		}\n	    \n		\n		@anchor {\n			a class='dropdown-toggle @[attr.class]' href='#' data-toggle='dropdown' {\n				@placeholder;\n				' ' span .caret;\n			}\n		}\n		@button {\n			button class='btn dropdown-toggle @[attr.class]' data-toggle='dropdown' {\n				@placeholder;\n				' ' span .caret;\n			}\n		}\n	    \n	    \n	    ul .dropdown-menu role='menu' {        \n	        @items; \n	    }\n	    \n	}\n	\n	// end:source Dropdown.mask\n	// source Panel.mask\n	let Panel {\n		.panel  {\n			@header {\n				.panel-heading > @placeholder;\n			}\n			@title {\n				.panel-heading > h3.panel-title > @placeholder;\n			}\n			.panel-body > @body required;\n			\n			@footer {\n				.panel-footer > @placeholder;\n			}\n		}\n	}\n	// end:source Panel.mask\n"),e.registerAttrHandler("x-tooltip",function(n,e,t,a,o){l(o).attr("title",e).tooltip()})});
//# sourceMappingURL=bootstrap-ui.min.js.map